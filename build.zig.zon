.{
    .name = "btzig-blockens",
    // This is a [Semantic Version](https://semver.org/).
    // In a future version of Zig it will be used for package deduplication.
    .version = "0.0.0",

    // This field is optional.
    // This is currently advisory only; Zig does not yet do anything
    // with this value.
    //.minimum_zig_version = "0.11.0",

    // This field is optional.
    // Each dependency must either provide a `url` and `hash`, or a `path`.
    // `zig build --fetch` can be used to fetch all dependencies of a package, recursively.
    // Once all dependencies are fetched, `zig build` no longer requires
    // Internet connectivity.
    .dependencies = .{
        .@"zig-gamedev" = .{
            .url = "https://github.com/michal-z/zig-gamedev/archive/d295b085ce9d4decd7a3cefc25e99f0fdf1cb786.tar.gz",
            .hash = "12200a4aff2c6b47c014609fe7dd46a41e1aee9041cdcd0569d2dea09e13e1cd64cd",
        },
        .ziglua = .{
            .url = "https://github.com/natecraddock/ziglua/archive/3538e1710a21d24924d35ef274be1e127da63d7d.tar.gz",
            .hash = "12202d1ee1975de6e494d5f81e5286bb25d7ae7e34e01c78d6a1f4b1667d2ddf72f6",
        },
        .sqlite = .{
            .url = "https://github.com/vrischmann/zig-sqlite/archive/aa6f95b1279f633259406e67986ba5ac4e76544b.tar.gz",
            .hash = "1220d751f09c5c18c45f0a42af71ff255e62ae73deb34567ca42e9e67c614a4daa5a",
        },
    },
    .paths = .{
        // This makes *all* files, recursively, included in this package. It is generally
        // better to explicitly list the files and directories instead, to insure that
        // fetching from tarballs, file system paths, and version control all result
        // in the same contents hash.
        "",
        // For example...
        //"build.zig",
        //"build.zig.zon",
        //"src",
        //"LICENSE",
        //"README.md",
    },
}
